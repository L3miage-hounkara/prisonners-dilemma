@startuml

class Partie {
    - Decision[] decisionsJoueur1;
    - Decision[] decisionsJoueur2;
    - Joueur player1
    - Joueur player2
    + Partie(Player player1, Player player2)
    + void jouer()
}


class Tour {
    - Decision decisionJoueur1
    - Decision decisionJoueur2
    + Tour(Decision decisionJoueur1, Decision decisionJoueur2)
    + void jouer()
}

class Joueur {
    - String name
    - Integer score
    + Player(String name)
    + void addStrategy(Strategy strategy)
    + void play()
    + String getName()
}

interface Strategy {
    + void execute()
}

class StrategyEmp {
    + void execute()
}


class StrategyFactory {
    + static Strategy createStrategy(String type)
}

Partie "*" -- "2" Joueur : Joue <
Tour "*" -- "2" Joueur : Joue <
Partie "1" -- "1..10" Tour : contient >
Joueur "*" -- "*" Strategy : utilise >
Strategy <|.. StrategyEmp : implements >

@enduml
